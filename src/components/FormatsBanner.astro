---
import { LinkButton } from '@astrojs/starlight/components';
---

<style>
    .custom-banner {
        @apply p-16 my-5 relative overflow-hidden box-border rounded-lg;

        --gradient-start: rgba(255, 255, 255, 0.5);

        background: radial-gradient(circle at 100% 100%, #ffffff 0, #ffffff 7px, transparent 7px) 0% 0%/12px 12px no-repeat,
        radial-gradient(circle at 0 100%, #ffffff 0, #ffffff 7px, transparent 7px) 100% 0%/12px 12px no-repeat,
        radial-gradient(circle at 100% 0, #ffffff 0, #ffffff 7px, transparent 7px) 0% 100%/12px 12px no-repeat,
        radial-gradient(circle at 0 0, #ffffff 0, #ffffff 7px, transparent 7px) 100% 100%/12px 12px no-repeat,
        linear-gradient(#ffffff, #ffffff) 50% 50%/calc(100% - 10px) calc(100% - 24px) no-repeat,
        linear-gradient(#ffffff, #ffffff) 50% 50%/calc(100% - 24px) calc(100% - 10px) no-repeat,
        linear-gradient(65deg, #7d79f25c 0%, #4bdaf045 100%);
    }

    .gradient-text {
        @apply inline-block mb-0;

        background: linear-gradient(to top left, #00ffee 0%, #8d0af1 90%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
</style>

<div class="custom-banner">
    <div class="hidden md:block">
        <img
            src="/images/featured-formats.svg"
            class="absolute right-8 top-1/2 -translate-y-1/2 pointer-events-none shadow-none !border-none"
            alt="Format icons"
        >
    </div>

    <p class="text-6xl font-bold gradient-text">
        <span id="formatsCounter" data-target-value="100">50</span>
    </p>

    <p class="font-bold text-[#3e5bab] text-lg mb-8">Supported Formats</p>

    <LinkButton
        href="https://store.crowdin.com/categories/file-formats"
        class="!rounded-lg !py-3 !bg-blue-500"
        icon="external"
        target="_blank"
    >
        View on Store
    </LinkButton>
</div>

<script>
    const counter = document.getElementById('formatsCounter');

    if (counter) {
        const value = +(counter.dataset?.targetValue ?? 0);
        const speed = 2000;

        const animate = () => {
            const data = +counter.innerText;
            const time = value / speed;

            if (data < value) {
                counter.innerText = String(Math.ceil(data + time));
                setTimeout(animate, 10);
            } else {
                counter.innerText = String(value);
                setTimeout(() => {
                  counter.innerText = value + "+";
                }, 30);
            }
        };

        animate();
    }
</script>
